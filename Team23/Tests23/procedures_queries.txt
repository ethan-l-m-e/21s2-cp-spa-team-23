../../../../Tests23/procedures_source.txt ../../../../Tests23/procedures_queries.txt ../../../tests/procedures_out.xml
procedure p;
Select p
proc1, proc2, proc3, proc4
5000
1 - [valid] check calls
call c;
Select c
1, 2, 3
5000
2 - [valid] check procedure modifies x
stmt s;
Select s such that Modifies("proc4", "x")
1, 2, 3, 4, 5, 6
5000
3 - [valid] check procedure Uses x
stmt s;
Select s such that Uses("proc4", "x")
none
5000
4 - [valid] procedure modifies varName ===============================================[Select procedure tests start]
procedure p;
Select p such that Modifies(p, "x")
proc1, proc2, proc3, proc4
5000
5 - [valid] procedure uses varName
procedure p;
Select p such that Uses(p, "x")
proc1, proc2, proc3
5000
6 - [valid] procedure uses wildcard
procedure p;
Select p such that Modifies(p, _)
proc1, proc2, proc3, proc4
5000
7 - [valid] procedure uses wildcard
procedure p;
Select p such that Uses(p, _)
proc1, proc2, proc3
5000
8 - [valid] procedure uses variable
procedure p; variable v;
Select p such that Modifies(p, v)
proc1, proc2, proc3, proc4
5000
9 - [valid] procedure uses variable
procedure p; variable v;
Select p such that Uses(p, v)
proc1, proc2, proc3
5000
10 - [valid] call modifies varName =========================================================[Select call tests start]
call c;
Select c such that Modifies(c, "x")
1, 2, 3
5000
11 - [valid] call uses varName
call c;
Select c such that Uses(c, "x")
1, 3
5000
12 - [valid] call uses wildcard
call c;
Select c such that Modifies(c, _)
1, 2, 3
5000
13 - [valid] call uses wildcard
call c;
Select c such that Uses(c, _)
1, 3
5000
14 - [valid] call uses variable
call c; variable v;
Select c such that Modifies(c, v)
1, 2, 3
5000
15 - [valid] call uses variable
call c; variable v;
Select c such that Uses(c, v)
1, 3
5000
16 - [valid] direct calls ========================================================================[Calls rs tests start]
procedure p;
Select p such that Calls(p, _)
proc1, proc2
5000
17 - [valid] direct calls with procName
procedure p;
Select p such that Calls(p, "proc3")
proc2
5000
18 - [valid] direct calls with procName lhs
procedure p;
Select p such that Calls("proc1", p)
proc2, proc4
5000
19 - [valid] direct calls with two procName
procedure p;
Select p such that Calls("proc1", "proc4")
proc1, proc2, proc3, proc4
5000
20 - [valid] direct calls with two procName but does not call
procedure p;
Select p such that Calls("proc1", "proc3")
none
5000
21 - [valid] calls with no relation wildcards
call c;
Select c such that Calls(_, _)
1, 2, 3
5000
22 - [valid] indirect calls with no relation wildcards
call c;
Select c such that Calls*(_, _)
1, 2, 3
5000
23 - [valid] indirect calls
procedure p;
Select p such that Calls* (p, _)
proc1, proc2
5000
24 - [valid] indirect calls with procName
procedure p;
Select p such that Calls*(p, "proc3")
proc1, proc2
5000
25 - [valid] indirect calls with procName lhs
procedure p;
Select p such that Calls*("proc1", p)
proc2, proc3, proc4
5000
26 - [valid] indirect calls with two procName
procedure p;
Select p such that Calls*("proc1", "proc3")
proc1, proc2, proc3, proc4
5000
27 - [valid] indirect calls with two procName but does not call
procedure p;
Select p such that Calls*( "proc3", "proc4")
none
5000
28 - [not valid] stmt modifies with call on rhs ==================================================[Invalid tests start]
stmt s; call c;
Select s such that Modifies(s, c)
none
5000
29 - [not valid] read modifies with call on rhs
read r; call c;
Select r such that Modifies(r, c)
none
5000
30 - [not valid] stmt uses with call on rhs
stmt s; call c;
Select s such that Uses(s, c)
none
5000
31 - [not valid] stmt uses with call on rhs
print p; call c;
Select p such that Uses(p, c)
none
5000
32 - [not valid] Calls with not procedure (assign)
assign a;
Select s such that Calls(a, _)
none
5000
33 - [not valid] Calls with not procedure (assign)
assign a;
Select s such that Calls(_, a)
none
5000
34 - [not valid] Calls with not procedure (read)
read r;
Select s such that Calls(r, _)
none
5000
35 - [not valid] Calls with not procedure (read)
read r;
Select s such that Calls(_, r)
none
5000
36 - [not valid] Calls with not procedure (print)
print pr;
Select s such that Calls(pr, _)
none
5000
37 - [not valid] Calls with not procedure (print)
print pr;
Select s such that Calls(_, pr)
none
5000
38 - [not valid] Calls with not procedure (while)
while w;
Select s such that Calls(w, _)
none
5000
39 - [not valid] Calls with not procedure (while)
while w;
Select s such that Calls(_, w)
none
5000
40 - [not valid] Calls with not procedure (ifs)
if ifs;
Select s such that Calls(ifs, _)
none
5000
41 - [not valid] Calls with not procedure (ifs)
if ifs;
Select s such that Calls(_, ifs)
none
5000
42 - [not valid] Calls with not procedure (call)
call cl;
Select s such that Calls(cl, _)
none
5000
43 - [not valid] Calls with not procedure (call)
call cl;
Select s such that Calls(_, cl)
none
5000
44 - [not valid] Calls* with not procedure (assign)
assign a;
Select s such that Calls*(a, _)
none
5000
45 - [not valid] Calls* with not procedure (assign)
assign a;
Select s such that Calls*(_, a)
none
5000
46 - [not valid] Calls* with not procedure (read)
read r;
Select s such that Calls*(r, _)
none
5000
47 - [not valid] Calls* with not procedure (read)
read r;
Select s such that Calls*(_, r)
none
5000
48 - [not valid] Calls* with not procedure (print)
print pr;
Select s such that Calls*(pr, _)
none
5000
49 - [not valid] Calls* with not procedure (print)
print pr;
Select s such that Calls*(_, pr)
none
5000
50 - [not valid] Calls* with not procedure (while)
while w;
Select s such that Calls*(w, _)
none
5000
51 - [not valid] Calls* with not procedure (while)
while w;
Select s such that Calls*(_, w)
none
5000
52 - [not valid] Calls* with not procedure (ifs)
if ifs;
Select s such that Calls*(ifs, _)
none
5000
53 - [not valid] Calls* with not procedure (ifs)
if ifs;
Select s such that Calls*(_, ifs)
none
5000
54 - [not valid] Calls* with not procedure (call)
call cl;
Select s such that Calls*(cl, _)
none
5000
55 - [not valid] Calls* with not procedure (call)
call cl;
Select s such that Calls*(_, cl)
none
5000