../../../../Tests23/tuples_source.txt ../../../../Tests23/tuples_queries.txt ../../../tests/tuples_out.xml
assign a;
Select <a, a>
1 1, 4 4, 6 6
5000
1 - [valid] select 2
assign a; read r;
Select <a, r>
1 2, 4 2, 6 2
5000
2 - [valid] select 2
assign a; print pr;
Select <a, pr>
1 8, 4 8, 6 8
5000
3 - [valid] select 2
assign a; call cl;
Select <a, cl>
1 7, 4 7, 6 7
5000
4 - [valid] select 2
assign a; procedure p;
Select <a, p>
1 Tuples, 1 TuplesAgain, 4 Tuples, 4 TuplesAgain, 6 Tuples, 6 TuplesAgain
5000
5 - [valid] select 2
assign a; while w;
Select <a, w>
1 3, 4 3, 6 3
5000
6 - [valid] select 2
assign a; if ifs;
Select <a, ifs>
1 5, 4 5, 6 5
5000
7 - [valid] select 2
read r; assign a;
Select <r, a>
2 1, 2 4, 2 6
5000
8 - [valid] select 2
read r;
Select <r, r>
2 2
5000
9 - [valid] select 2
read r; print pr;
Select <r, pr>
2 8
5000
10 - [valid] select 2
read r; call cl;
Select <r, cl>
2 7
5000
11 - [valid] select 2
read r; procedure p;
Select <r, p>
2 Tuples, 2 TuplesAgain
5000
12 - [valid] select 2
read r; while w;
Select <r, w>
2 3
5000
13 - [valid] select 2
read r; if ifs;
Select <r, ifs>
2 5
5000
14 - [valid] select 2
print pr; assign a;
Select <pr, a>
8 1, 8 4, 8 6
5000
15 - [valid] select 2
print pr; read r;
Select <pr, r>
8 2
5000
16 - [valid] select 2
print pr;
Select <pr, pr>
8 8
5000
17 - [valid] select 2
print pr; call cl;
Select <pr, cl>
8 7
5000
18 - [valid] select 2
print pr; procedure p;
Select <pr, p>
8 Tuples, 8 TuplesAgain
5000
19 - [valid] select 2
print pr; while w;
Select <pr, w>
8 3
5000
20 - [valid] select 2
print pr; if ifs;
Select <pr, ifs>
8 5
5000
21 - [valid] select 2
call cl; assign a;
Select <cl, a>
7 1, 7 4, 7 6
5000
22 - [valid] select 2
call cl; read r;
Select <cl, r>
7 2
5000
23 - [valid] select 2
call cl; print pr;
Select <cl, pr>
7 8
5000
24 - [valid] select 2
call cl;
Select <cl, cl>
7 7
5000
25 - [valid] select 2
call cl; procedure p;
Select <cl, p>
7 Tuples, 7 TuplesAgain
5000
26 - [valid] select 2
call cl; while w;
Select <cl, w>
7 3
5000
27 - [valid] select 2
call cl; if ifs;
Select <cl, ifs>
7 5
5000
28 - [valid] select 2
procedure p; assign a;
Select <p, a>
Tuples 1, TuplesAgain 1, Tuples 4, TuplesAgain 4, Tuples 6, TuplesAgain 6
5000
29 - [valid] select 2
procedure p; read r;
Select <p, r>
Tuples 2, TuplesAgain 2
5000
30 - [valid] select 2
procedure p; print pr;
Select <p, pr>
Tuples 8, TuplesAgain 8
5000
31 - [valid] select 2
procedure p; call cl;
Select <p, cl>
Tuples 7, TuplesAgain 7
5000
32 - [valid] select 2
procedure p;
Select <p, p>
Tuples Tuples, TuplesAgain TuplesAgain
5000
33 - [valid] select 2
procedure p; while w;
Select <p, w>
Tuples 3, TuplesAgain 3
5000
34 - [valid] select 2
procedure p; if ifs;
Select <p, ifs>
Tuples 5, TuplesAgain 5
5000
35 - [valid] select 2
while w; assign a;
Select <w, a>
3 1, 3 4, 3 6
5000
36 - [valid] select 2
while w; read r;
Select <w, r>
3 2
5000
37 - [valid] select 2
while w; print pr;
Select <w, pr>
3 8
5000
38 - [valid] select 2
while w; call cl;
Select <w, cl>
3 7
5000
39 - [valid] select 2
while w; procedure p;
Select <w, p>
3 Tuples, 3 TuplesAgain
5000
40 - [valid] select 2
while w;
Select <w, w>
3 3
5000
41 - [valid] select 2
while w; if ifs;
Select <w, ifs>
3 5
5000
42 - [valid] select 2
if ifs; assign a;
Select <ifs, a>
5 1, 5 4, 5 6
5000
43 - [valid] select 2
if ifs; read r;
Select <ifs, r>
5 2
5000
44 - [valid] select 2
if ifs; print pr;
Select <ifs, pr>
5 8
5000
45 - [valid] select 2
if ifs; call cl;
Select <ifs, cl>
5 7
5000
46 - [valid] select 2
if ifs; procedure p;
Select <ifs, p>
5 Tuples, 5 TuplesAgain
5000
47 - [valid] select 2
if ifs; while w;
Select <ifs, w>
5 3
5000
48 - [valid] select 2
if ifs;
Select <ifs, ifs>
5 5
5000
48 - [valid] Select 2 + Uses
assign a; print pr;
Select <a, pr> such that Uses(pr, "C")
1 8, 4 8, 6 8
5000
49 - [valid] Select 2 + Modifies
assign a; read r; variable v;
Select <a, r> such that Modifies(r, v)
1 2, 4 2, 6 2
5000
50 - [valid] Select 2 + Follows
assign a; read r;
Select <a, r> such that Follows(a, r)
1 2
5000
51 - [valid] Select 2 + Follows*
assign a; while w;
Select <a, w> such that Follows*(a, w)
1 3
5000
52 - [valid] Select 2 + Parent
assign a; while w;
Select <w, a> such that Parent(w, a)
3 4
5000
53 - [valid] Select 2 + Parent*
assign a; while w;
Select <w, a> such that Parent*(w, a)
3 4
5000
54 - [valid] Select 2 + Next
assign a; if ifs;
Select <ifs, a> such that Next(ifs, a)
5 6
5000
55 - [valid] Select 2 + Next*
assign a; procedure p;
Select <a, p> such that Next*(a, a)
4 Tuples, 4 TuplesAgain
5000
56 - [valid] Select 2 + Calls
procedure p, p1;
Select <p, p1> such that Calls(p, p1)
Tuples TuplesAgain
5000
57 - [valid] Select 2 + Calls*
procedure p, p1;
Select <p, p1> such that Calls*("Tuples", "TuplesAgain")
Tuples Tuples, Tuples TuplesAgain, TuplesAgain Tuples, TuplesAgain TuplesAgain
5000
58 - [valid] Select 2 + Affects
assign a, a1;
Select <a, a1> such that Affects(a, a1)
1 4, 4 6
5000
59 - [valid] Select 2 + Affects*
assign a, a1;
Select <a, a1> such that Affects*(a, a1)
1 4, 4 6, 1 6
5000
60 - [valid] Select 2 + pattern
assign a; procedure pr;
Select <a, pr> pattern a(_, _"g%h"_)
1 Tuples, 1 TuplesAgain
5000
61 - [valid] select 3
read r; print pr; call c;
Select <r, pr, c>
2 8 7
5000
62 - [valid] Select 5
read r; print pr; call cl; while w; if ifs;
Select <r, pr, cl, w, ifs>
2 8 7 3 5
5000
63 - [valid] select 1 syn 1 attr =====================================================================[attr tests start]
assign a;
Select <a, a.stmt#>
1 1, 4 4, 6 6
5000
64 - [valid] select 1 syn 1 attr
assign a;
Select <a.stmt#, a>
1 1, 4 4, 6 6
5000
65 - [valid] select 3 attr
read r; print pr; call cl;
Select <r.varName, pr.varName, cl.procName>
B C TuplesAgain
5000
66 - [valid] Select 4 syn 1 attr
read r; print pr; call cl; while w; if ifs;
Select <r.varName, pr, cl, w, ifs>
B 8 7 3 5
5000
67 - [valid] Select 4 syn 1 attr
read r; print pr; call cl; while w; if ifs;
Select <r, pr.varName, cl, w, ifs>
2 C 7 3 5
5000
68 - [valid] Select 2 syn 3 attr
read r; print pr; call cl; while w; if ifs;
Select <r.varName, pr, cl.procName, w, ifs.stmt#>
B 8 TuplesAgain 3 5
5000
69 - [valid] Select 7 same syn
call cl;
Select <cl, cl, cl, cl, cl, cl, cl>
7 7 7 7 7 7 7
5000
70 - Select 1 syn 1 attr with Uses
assign a; variable v;
Select <a, v.varName> such that Uses(a, v)
1 a, 1 b, 1 c, 1 d, 1 e, 1 f, 1 g, 1 h, 1 i, 1 j, 1 k, 1 l, 4 G, 6 F
5000
71 - Select 2 attr with Parent and Uses
stmt s; variable v;
Select <s.stmt#, v.varName> such that Parent(s, _) and Uses(s, v)
3 D, 3 E, 3 G, 5 H, 5 I, 5 F, 5 C
5000
