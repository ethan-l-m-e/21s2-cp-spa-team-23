procedure first{
    m11 = u11 + u11 / x4 * 3 / 5 + (19 - 2 * 22) / 2 + (u18 * (u19 - (19 * (2 + 2 + (2 + 2)))));
    mu11 = mu11+ 1;
    mu13 = 3;
    mu14 = 4;
    mu15 = mu15;
    if ((( u12 ==  mu11 ) && (!( 123 == 321 ))) || ( u13 == 1 + 1)) then {
      call fifth;
      mu12 = mu12 + 5;
      while (mu11 + mu12 == mu13 + mu14) {
        while ((mu13 == 13) || (mu14 == 14)) {
          m11 = u2 * 2 + 5;
          while ((mu11 == mu12) || (u13 * u12 == mu13 % 4)) {
            read m13;
            print u12;
            if (mu16 * mu17 * mu18 * mu19 == u16 / u17 / u18 / u19)
              then{
                  while (u11==u12){
                    mu11 = u12 + 1;
                    mu21 = u11 + 1;
                  }
              }
            else {
              while ((!(6 == 9)) || (4 == 2 + 2)) {
                mu11 = mu12 * mu13;
                m11 = u19 + u18;
              }
              if (72 * 1010101010101 >= u15)
                then{
                    mu19 = u19 + u18 + u17 / u16;
                    mu19 = mu19+ 10;
                    print u19;
                    read m19;
                }
              else {
                m17 = u17;
                m18 = u18;
                m15 = mu16 + mu17 + mu18 + mu19;
              }
              print mu11;
              read m16;
              read m12;
            }

          }
          m14 = 4 + 5;
          m15 = 9 * 4;

        }
        while (1 == 1) {
          m11 = u14 + u15;
          m12 = u13 * u16;
        }
      }
      mu13 = mu12 + 5 * 2 + (8 - 10);
    }else{
      mu18 = u14 + u14;
      mu15 = mu15 + mu18;
      call second;

    }
    call fourth;

}

procedure second{

    m21 = u21 * u22 / u23;
    read m23;
    print u24;

    if (u22 < 19) then {

      while (!((mu24 == mu24) && ((u25 - u24 != mu23) || (!(u22 < 1))))) {

        print mu23;
        read m23;

        while ((((2 > 1) || (u21 < mu21))
            || (((mu22 > u22) && (mu21 < u23)) && ((mu21) != (18 * (69) - (u24) / 2 + u21 % x2))))
            && ((((x1 > x2) || (u21 < u24))
                || (((u25 > mu25) && (3 < 15)) && ((77) != (u21 * (u22) - (u23) / 2 + u24 % x6))))
                || (((mu21 > mu22) || (mu23 < mu24))
                    || (((mu21 > 22) && (3 < 5)) && ((8) != (8 * (8) - (16) / 2 + 16 % 2)))))) {

          while (2 == 2 + 2 - 2 * 2 / 2 % 2 + 22) {

            m22 = u22 - 18 / 2 * 18;
            m23 = 2;
            m24 = 6;
            m25 = u25;

          }

          while (1 < 2) {

            mu21 = 21;
            mu22 = 22;
            mu23 = 23;

            while (2 > 1) {

              mu24 = u24;
              mu25 = mu25 + 1;
            }

            m21 = u25 + u22 * x2 + (mu21 / 7);

          }
        }

      }

    } else {

      while (!((u26 == u27) && ((u28 - u29 != mu23) || (!(u22 < 1))))) {

        print mu23;
        read m23;

        while ((((2 > 1) || (u21 < mu21))
            || (((mu22 > u22) && (mu21 < u23)) && ((mu21) != (18 * (69) - (u24) / 2 + u21 % x2))))
            && ((((x1 > x2) || (u21 < u24))
                || (((u25 > mu25) && (3 < 15)) && ((77) != (u21 * (u22) - (u23) / 2 + u24 % x6))))
                || (((mu21 > mu22) || (mu23 < mu24))
                    || (((mu21 > 22) && (3 < 5)) && ((8) != (8 * (8) - (16) / 2 + 16 % 2)))))) {

          while (2 == 2 + 2 - 2 * 2 / 2 % 2 + 22) {

            m22 = u22 - 18 / 2 * 18;
            m23 = 2;
            m24 = 6;
            m25 = u25;

          }

          while (1 < 2) {

            mu21 = 21;
            mu22 = 22;
            mu23 = 23;

            while (2 > 1) {

              mu24 = u24;
              mu25 = mu25 + 1;
            }

            m21 = u26 + u22 * x2 + (mu21 / 7);

          }
        }
      }
    }

    m22 = u21 / x1 * 3 / 5 + (18 - 2 * 22) / 2 + (u28 * (u29 - (18 * (2 + 2 + (2 + 2)))));
    print u23;
    print mu22;
    call third;

}

procedure third{
    if ((u31 == u32) || (u41 == u42))
    then{
      m31 = u31;
      m32 = u32;
      m33 = u33;
      m34 = u34;
      m35 = u35;
    }
    else {
      m36 = u36;
      m37 = u37;
      m38 = u38;
      m39 = u39;
      while ((mu31 == mu32) && (!(mu32 == mu31))) {
        mu33 = mu34;
        mu34 = mu33;
      }
      mu35 = mu36;
      mu36 = mu35;
      mu31 = mu32;
      mu32 = mu31;
    }
    mu37 = mu37;
    mu38 = mu38;
    mu39 = (((((((u31 + u32) + u33) + u34) - u35) - u36) - u37) - u38) * mu39;

    if ((u31 == u32) || (u41 == u42))
    then{
      m31 = u31;
      m32 = u32;
      m33 = u33;
      m34 = u34;
      m35 = u35;
    }
    else {
      m36 = u36;
      m37 = u37;
      m38 = u38;
      m39 = u39;
      while ((mu31 == mu32) && (!(mu32 == mu31))) {
        mu33 = mu34;
        mu34 = mu33;
      }
      mu35 = mu36;
      mu36 = mu35;
      mu31 = mu32;
      mu32 = mu31;
    }
    mu37 = mu37;
    mu38 = mu38;
    mu39 = (((((((u31 + u32) + u33) + u34) - u35) - u36) - u37) - u38) * mu39;
}

procedure fourth{
    if( (u41==u42) && (u43==u44) ) then {
        mu41 = mu41;
        mu42 = mu42;
        mu43= mu43;
        mu44 = mu44;
        if( (u41==u43) || (u44==u46) ) then {
            mu47 = mu48;
        }else{
            m41 = u41;
        }
    }else{
        mu43= mu44;
        mu44 = mu43;
    }
    m48 = m49;
    if( (u41==u42) && (u43==u44) ) then {
        mu41 = mu41;
        mu42 = mu42;
        mu43= mu43;
        mu44 = mu44;
        while( (u41==u43) || (u44==u46) )  {
            mu47 = mu48;
        }
    }else{
        mu43= mu44;
        mu44 = mu43;
    }
    if( (u41==u42) && (u43==u44) ) then {
        mu41 = mu41;
        while( (u41==u43) || (u44==u46) )  {
            mu47 = mu48;
        }
        mu49 = mu49;
    }else{
        mu43= mu44;
        mu44 = mu43;
        while( (u41==u43) || (u44==u46) )  {
            mu47 = mu48;
        }
    }
}

procedure fifth{
    m51 = (u51*u52)*(u53-u54);
    m52 = (u55)*((u56));
    m53 = ((u57+u58)*(u57-u58))/u59;
    m54 = u54/u55/u56 + u51*u52*u53;
    m55 = (mu51%mu52)/(1 % 100001);

    while(1==1){
         m56 = (u55)*((u56))%(u51*u52)*(u53-u54);
         m57 = ((u57+u58)*(u57-u58))/u59+(u55)*((u56));
         m58 = u54/u55/u56 + u51*u52*u53/((u57+u58)*(u57-u58))/u59;
         mu51 = u54/u55/u56 + u51*u52*u53 - (mu51%mu52)/(1 % 100001);
         mu52 = (mu51%mu52)/(1 % 100001);
    }
    m59 = (1+2)*3 +(4+5)*6 + (7+8)*9;

    if( !((u55)*((u56))%(u51*u52)*(u53-u54)== ((u57+u58)*(u57-u58))/u59+(u55)*((u56))) ) then{
        m51 = u51;
        mu56=mu56;
    }else{
        m52 = u52;
        mu55 = mu54;
    }

    while( u54/u55/u56 + u51*u52*u53 - (mu51%mu52)/(1 % 100001) > u54/u55/u56 + u51*u52*u53/((u57+u58)*(u57-u58))/u59 ){
        mu53 = mu53;
        mu54 = mu55;
    }
    read mu58;
    print mu59;
}




procedure sixth{
    while(u61 == u62){
        if(u63==u64) then{
            mu61 = mu61;
            mu63 = mu64;
        }
        else{
            mu62 = mu62;
            mu64 = mu63;
        }
        m61 = u62;
    }
    while(u61 == u62){
        if(u63==u64) then{
            mu61 = mu61;
            mu63 = mu64;
        }
        else{
            mu62 = mu62;
            mu64 = mu63;
        }
    }
    while(u61 == u62){
        while(u63==u64){
            mu61 = mu61;
            mu63 = mu64;
            mu62 = mu62;
            mu64 = mu63;
        }
    }
    while(u61 == u62){
        while(u63==u64){
            mu61 = mu61;
            mu63 = mu64;
            mu62 = mu62;
            mu64 = mu63;
        }
        m63 = u63;
    }
}